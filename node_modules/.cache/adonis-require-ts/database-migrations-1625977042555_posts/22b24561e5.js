"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Schema_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Lucid/Schema"));
class Posts extends Schema_1.default {
    constructor() {
        super(...arguments);
        this.tableName = 'posts';
    }
    async up() {
        this.schema.createTable(this.tableName, (table) => {
            table.increments('id');
            table.integer('user_id').unsigned().references('id').inTable('users').onDelete('CASCADE');
            table.string('slug').notNullable();
            table.string('subject', 255).notNullable();
            table.text('content', 'longText').notNullable();
            table.timestamp('publish_at', { useTz: true });
            table.timestamp('created_at', { useTz: true });
            table.timestamp('updated_at', { useTz: true });
        });
    }
    async down() {
        this.schema.dropTable(this.tableName);
    }
}
exports.default = Posts;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYyNTk3NzA0MjU1NV9wb3N0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIjE2MjU5NzcwNDI1NTVfcG9zdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx1RkFBaUQ7QUFFakQsTUFBcUIsS0FBTSxTQUFRLGdCQUFVO0lBQTdDOztRQUNZLGNBQVMsR0FBRyxPQUFPLENBQUE7SUF1Qi9CLENBQUM7SUFyQlEsS0FBSyxDQUFDLEVBQUU7UUFDYixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDaEQsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUV0QixLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQ3pGLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUE7WUFDbEMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUE7WUFDMUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUE7WUFDL0MsS0FBSyxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUMsRUFBQyxLQUFLLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQTtZQUszQyxLQUFLLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFBO1lBQzlDLEtBQUssQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7UUFDaEQsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLElBQUk7UUFDZixJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDdkMsQ0FBQztDQUNGO0FBeEJELHdCQXdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXNlU2NoZW1hIGZyb20gJ0Bpb2M6QWRvbmlzL0x1Y2lkL1NjaGVtYSdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9zdHMgZXh0ZW5kcyBCYXNlU2NoZW1hIHtcbiAgcHJvdGVjdGVkIHRhYmxlTmFtZSA9ICdwb3N0cydcblxuICBwdWJsaWMgYXN5bmMgdXAgKCkge1xuICAgIHRoaXMuc2NoZW1hLmNyZWF0ZVRhYmxlKHRoaXMudGFibGVOYW1lLCAodGFibGUpID0+IHtcbiAgICAgIHRhYmxlLmluY3JlbWVudHMoJ2lkJylcblxuICAgICAgdGFibGUuaW50ZWdlcigndXNlcl9pZCcpLnVuc2lnbmVkKCkucmVmZXJlbmNlcygnaWQnKS5pblRhYmxlKCd1c2VycycpLm9uRGVsZXRlKCdDQVNDQURFJylcbiAgICAgIHRhYmxlLnN0cmluZygnc2x1ZycpLm5vdE51bGxhYmxlKClcbiAgICAgIHRhYmxlLnN0cmluZygnc3ViamVjdCcsIDI1NSkubm90TnVsbGFibGUoKVxuICAgICAgdGFibGUudGV4dCgnY29udGVudCcsICdsb25nVGV4dCcpLm5vdE51bGxhYmxlKClcbiAgICAgIHRhYmxlLnRpbWVzdGFtcCgncHVibGlzaF9hdCcse3VzZVR6OiB0cnVlfSlcblxuICAgICAgLyoqXG4gICAgICAgKiBVc2VzIHRpbWVzdGFtcHR6IGZvciBQb3N0Z3JlU1FMIGFuZCBEQVRFVElNRTIgZm9yIE1TU1FMXG4gICAgICAgKi9cbiAgICAgIHRhYmxlLnRpbWVzdGFtcCgnY3JlYXRlZF9hdCcsIHsgdXNlVHo6IHRydWUgfSlcbiAgICAgIHRhYmxlLnRpbWVzdGFtcCgndXBkYXRlZF9hdCcsIHsgdXNlVHo6IHRydWUgfSlcbiAgICB9KVxuICB9XG5cbiAgcHVibGljIGFzeW5jIGRvd24gKCkge1xuICAgIHRoaXMuc2NoZW1hLmRyb3BUYWJsZSh0aGlzLnRhYmxlTmFtZSlcbiAgfVxufVxuIl19