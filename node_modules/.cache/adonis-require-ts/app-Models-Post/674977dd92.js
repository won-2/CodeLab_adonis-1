"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
const User_1 = __importDefault(require("./User"));
const Comment_1 = __importDefault(require("./Comment"));
class Post extends Orm_1.BaseModel {
}
__decorate([
    Orm_1.column({ isPrimary: true }),
    __metadata("design:type", Number)
], Post.prototype, "id", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", Number)
], Post.prototype, "userId", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", String)
], Post.prototype, "slug", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", String)
], Post.prototype, "subject", void 0);
__decorate([
    Orm_1.column(),
    __metadata("design:type", String)
], Post.prototype, "content", void 0);
__decorate([
    Orm_1.column.dateTime(),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], Post.prototype, "publishAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Post.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_c = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _c : Object)
], Post.prototype, "updatedAt", void 0);
__decorate([
    Orm_1.belongsTo(() => User_1.default),
    __metadata("design:type", typeof (_d = typeof Orm_1.BelongsTo !== "undefined" && Orm_1.BelongsTo) === "function" ? _d : Object)
], Post.prototype, "user", void 0);
__decorate([
    Orm_1.hasMany(() => Comment_1.default),
    __metadata("design:type", typeof (_e = typeof Orm_1.HasMany !== "undefined" && Orm_1.HasMany) === "function" ? _e : Object)
], Post.prototype, "comments", void 0);
exports.default = Post;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9zdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlBvc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUNBQWdDO0FBQ2hDLGdFQUFpRztBQUNqRyxrREFBeUI7QUFDekIsd0RBQStCO0FBRS9CLE1BQXFCLElBQUssU0FBUSxlQUFTO0NBa0MxQztBQWhDQztJQURDLFlBQU0sQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7Z0NBQ1g7QUFHakI7SUFEQyxZQUFNLEVBQUU7O29DQUNZO0FBSXJCO0lBREMsWUFBTSxFQUFFOztrQ0FDVTtBQUduQjtJQURDLFlBQU0sRUFBRTs7cUNBQ2E7QUFHdEI7SUFEQyxZQUFNLEVBQUU7O3FDQUNhO0FBR3RCO0lBREMsWUFBTSxDQUFDLFFBQVEsRUFBRTtrREFDQSxnQkFBUSxvQkFBUixnQkFBUTt1Q0FBQTtBQUkxQjtJQURDLFlBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQ3BCLGdCQUFRLG9CQUFSLGdCQUFRO3VDQUFBO0FBSTFCO0lBREMsWUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUN0QyxnQkFBUSxvQkFBUixnQkFBUTt1Q0FBQTtBQUcxQjtJQURDLGVBQVMsQ0FBQyxHQUFFLEVBQUUsQ0FBQSxjQUFJLENBQUM7a0RBQ1AsZUFBUyxvQkFBVCxlQUFTO2tDQUFhO0FBR25DO0lBREMsYUFBTyxDQUFDLEdBQUUsRUFBRSxDQUFDLGlCQUFPLENBQUM7a0RBQ0osYUFBTyxvQkFBUCxhQUFPO3NDQUFnQjtBQWhDM0MsdUJBa0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbidcbmltcG9ydCB7IEJhc2VNb2RlbCwgQmVsb25nc1RvLCBiZWxvbmdzVG8sIGNvbHVtbiwgSGFzTWFueSwgaGFzTWFueSB9IGZyb20gJ0Bpb2M6QWRvbmlzL0x1Y2lkL09ybSdcbmltcG9ydCBVc2VyIGZyb20gJy4vVXNlcidcbmltcG9ydCBDb21tZW50IGZyb20gJy4vQ29tbWVudCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9zdCBleHRlbmRzIEJhc2VNb2RlbCB7XG4gIEBjb2x1bW4oeyBpc1ByaW1hcnk6IHRydWUgfSlcbiAgcHVibGljIGlkOiBudW1iZXJcblxuICBAY29sdW1uKClcbiAgcHVibGljIHVzZXJJZDogbnVtYmVyXG5cblxuICBAY29sdW1uKClcbiAgcHVibGljIHNsdWc6IHN0cmluZ1xuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgc3ViamVjdDogc3RyaW5nXG4gIFxuICBAY29sdW1uKClcbiAgcHVibGljIGNvbnRlbnQ6IHN0cmluZ1xuICBcbiAgQGNvbHVtbi5kYXRlVGltZSgpXG4gIHB1YmxpYyBwdWJsaXNoQXQ6IERhdGVUaW1lXG4gIFxuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyBjcmVhdGVkQXQ6IERhdGVUaW1lXG5cblxuICBAY29sdW1uLmRhdGVUaW1lKHsgYXV0b0NyZWF0ZTogdHJ1ZSwgYXV0b1VwZGF0ZTogdHJ1ZSB9KVxuICBwdWJsaWMgdXBkYXRlZEF0OiBEYXRlVGltZVxuXG4gIEBiZWxvbmdzVG8oKCk9PlVzZXIpXG4gIHB1YmxpYyB1c2VyOiBCZWxvbmdzVG88dHlwZW9mIFVzZXI+XG5cbiAgQGhhc01hbnkoKCk9PiBDb21tZW50KVxuICBwdWJsaWMgY29tbWVudHMgOiBIYXNNYW55PHR5cGVvZiBDb21tZW50PlxuXG59XG4iXX0=